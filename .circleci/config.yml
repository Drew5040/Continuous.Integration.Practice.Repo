####### Python CircleCI 2.0 config file ########

### > This first section is telling Circle CI which docker container to load up to run project in

# Version: selects circle c.i. API
version: 2
# Jobs: can specify for what things to check. If only 1 job have to call it just 'build'.
# Job Ex: run program on multiple version of Python to check compatibility
jobs:
  build:
    # Docker: tells circle c.i. to go to docker and load pre-installed container (circleci/python:3.11.0)
    docker:
      - image: circleci/python:3.11.0
    # Working Directory: creates a temp directory on the build server to store all files
    working_directory: /home/circleci/repo
    steps:
      # Step 1: obtain repo from GitHub
      - checkout
      # Step 2: create virtual env. and install dependencies
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      # Step 3: run linter & tests
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            flake8 --exclude=venv* --statistics
            pytest -v --cov=calculator
            

### > What We Are Doing in a NutShell:

# 1. Set up a CircleCI configuration using version 2 of the CircleCI API.

# 2. Create a Docker container for the build environment based on the circleci/python:3.11.0 image.
#
# 3. Define the working directory within the CircleCI environment as /home/circleci/repo, which is where my
#    project's files will be loaded from my local environment into CircleCI's environment.

# - In the build environment:

# • Create a Python virtual environment.
# • Install project dependencies using pip and the requirements.txt file.
# • Run the linter (flake8) to check for PEP 8 violations in your code.
# • Run tests using pytest and collect coverage information with pytest-cov. The tests are run on the test_calculator.py
#   file, which is loaded from your local Windows environment into the /home/circleci/repo directory in CircleCI's
#   environment.
